{"version":3,"file":"rpcUrl.js","sourceRoot":"","sources":["../../../src/errors/rpcUrl.ts"],"names":[],"mappings":"AAAA,OAAO,EAAyB,MAAM,cAAc,CAAC;AACrD,OAAO,EAAc,MAAM,MAAM,CAAC;AAClC,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAEtC,MAAM,OAAO,kBAAmB,SAAQ,SAAS;IAG/C,YAAY,OAA6D;QACvE,KAAK,CAAC,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACzC,OAAO,EAAE;gBACP,wHAAwH;gBACxH,wCAAwC;aACzC,CAAC,IAAI,CAAC,IAAI,CAAC;YACZ,YAAY,EAAE;gBACZ,UAAU,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE;gBAClD,qBAAqB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;aAChE;SACF,CAAC,CAAC;QAZI;;;;mBAAO,oBAAoB;WAAC;IAarC,CAAC;CACF","sourcesContent":["import { type ConnectionConfig } from \"@aa-sdk/core\";\nimport { type Chain } from \"viem\";\nimport { BaseError } from \"./base.js\";\n\nexport class InvalidRpcUrlError extends BaseError {\n  override name = \"InvalidRpcUrlError\";\n\n  constructor(context: { chain: Chain; connectionConfig: ConnectionConfig }) {\n    super([\"RPC Url not provided\"].join(\"\\n\"), {\n      details: [\n        \"If you are passing in a chain object and only an API key, make sure to use the chain object exported from @aa-sdk/core\",\n        \"Otherwise, pass in an RPC URL directly\",\n      ].join(\"\\n\"),\n      metaMessages: [\n        `Chain: ${JSON.stringify(context.chain, null, 2)}`,\n        `ConnectionConfig: ${JSON.stringify(context.connectionConfig)}`,\n      ],\n    });\n  }\n}\n"]}