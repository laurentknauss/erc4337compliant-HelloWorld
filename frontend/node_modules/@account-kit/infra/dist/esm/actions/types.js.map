{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/actions/types.ts"],"names":[],"mappings":"AAGA,MAAM,CAAN,IAAY,iBAUX;AAVD,WAAY,iBAAiB;IAC3B,sCAAiB,CAAA;IACjB,oCAAe,CAAA;IACf,sCAAiB,CAAA;IACjB,wCAAmB,CAAA;IACnB;;;OAGG;IACH,gDAA2B,CAAA;AAC7B,CAAC,EAVW,iBAAiB,KAAjB,iBAAiB,QAU5B;AAED,MAAM,CAAN,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC5B,yCAAmB,CAAA;IACnB,2CAAqB,CAAA;AACvB,CAAC,EAHW,kBAAkB,KAAlB,kBAAkB,QAG7B","sourcesContent":["import type { UserOperationStruct } from \"@aa-sdk/core\";\nimport type { Address, Hash } from \"viem\";\n\nexport enum SimulateAssetType {\n  NATIVE = \"NATIVE\",\n  ERC20 = \"ERC20\",\n  ERC721 = \"ERC721\",\n  ERC1155 = \"ERC1155\",\n  /**\n   * Special contracts that don't follow ERC 721/1155. Currently limited to\n   * CryptoKitties and CryptoPunks.\n   */\n  SPECIAL_NFT = \"SPECIAL_NFT\",\n}\n\nexport enum SimulateChangeType {\n  APPROVE = \"APPROVE\",\n  TRANSFER = \"TRANSFER\",\n}\n\nexport type SimulateUserOperationAssetChangesRequest = [\n  UserOperationStruct,\n  entryPoint: Address,\n  blockNumber?: Hash\n];\n\nexport type SimulateUserOperationAssetChangesResponse = {\n  changes: SimulateAssetChange[];\n  error?: SimulateAssetChangesError;\n};\n\nexport interface SimulateAssetChangesError extends Record<string, any> {\n  message: string;\n}\n\nexport interface SimulateAssetChange {\n  assetType: SimulateAssetType;\n  changeType: SimulateChangeType;\n  from: Address;\n  to: Address;\n  rawAmount?: string;\n  amount?: string;\n  contactAddress: Address;\n  tokenId?: string;\n  decimals: number;\n  symbol: string;\n  name?: string;\n  logo?: string;\n}\n"]}