import type { Chain } from "viem";
export type AlchemyChainConfig = {
    chain: Chain;
    rpcBaseUrl: string;
};
/**
 * Defines an Alchemy chain configuration by adding an Alchemy-specific RPC base URL to the chain's RPC URLs.
 *
 * @example
 * ```ts
 * import { defineAlchemyChain } from "@account-kit/infra";
 * import { sepolia } from "viem/chains";
 *
 * const chain = defineAlchemyChain({
 *  chain: sepolia,
 *  rpcBaseUrl: "https://eth-sepolia.g.alchemy.com/v2"
 * });
 * ```
 *
 * @param {AlchemyChainConfig} params The parameters for defining the Alchemy chain
 * @param {Chain} params.chain The original chain configuration
 * @param {string} params.rpcBaseUrl The Alchemy-specific RPC base URL
 * @returns {Chain} The updated chain configuration with the Alchemy RPC URL added
 */
export declare const defineAlchemyChain: ({ chain, rpcBaseUrl, }: {
    chain: Chain;
    rpcBaseUrl: string;
}) => Chain;
export declare const arbitrum: Chain;
export declare const arbitrumGoerli: Chain;
export declare const arbitrumSepolia: Chain;
export declare const goerli: Chain;
export declare const mainnet: Chain;
export declare const optimism: Chain;
export declare const optimismGoerli: Chain;
export declare const optimismSepolia: Chain;
export declare const sepolia: Chain;
export declare const base: Chain;
export declare const baseGoerli: Chain;
export declare const baseSepolia: Chain;
export declare const polygonMumbai: Chain;
export declare const polygonAmoy: Chain;
export declare const polygon: Chain;
export declare const fraxtal: Chain;
export declare const fraxtalSepolia: Chain;
export declare const zora: Chain;
export declare const zoraSepolia: Chain;
export declare const worldChainSepolia: Chain;
export declare const worldChain: Chain;
export declare const shapeSepolia: Chain;
export declare const shape: Chain;
export declare const beraChainBartio: Chain;
export declare const arbitrumNova: Chain;
//# sourceMappingURL=chains.d.ts.map