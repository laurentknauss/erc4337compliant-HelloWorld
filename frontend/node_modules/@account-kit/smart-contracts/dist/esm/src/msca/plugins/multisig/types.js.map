{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../../src/msca/plugins/multisig/types.ts"],"names":[],"mappings":"","sourcesContent":["import type {\n  GetAccountParameter,\n  GetEntryPointFromAccount,\n  SmartContractAccount,\n  UserOperationRequest,\n} from \"@aa-sdk/core\";\nimport type { Hex } from \"viem\";\nimport type { GetPluginAddressParameter } from \"../types\";\n\nexport type SignerType = \"EOA\" | \"CONTRACT\";\n\nexport type UserOpSignatureType = \"ACTUAL\" | \"UPPERLIMIT\";\n\nexport type Signature = {\n  signerType: SignerType;\n  userOpSigType: UserOpSignatureType;\n  signer: `0x${string}`;\n  signature: `0x${string}`;\n};\n\nexport type SignMultisigUserOperationResult = {\n  signature: Hex;\n  aggregatedSignature: Hex;\n  signatureObj: Signature;\n};\n\nexport type SignMultisigUserOperationParams<\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TEntryPointVersion extends GetEntryPointFromAccount<TAccount> = GetEntryPointFromAccount<TAccount>\n> = {\n  userOperationRequest: UserOperationRequest<TEntryPointVersion>;\n  signatures: Signature[];\n} & GetAccountParameter<TAccount> &\n  GetPluginAddressParameter;\n\nexport type ProposeUserOperationResult<\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TEntryPointVersion extends GetEntryPointFromAccount<TAccount> = GetEntryPointFromAccount<TAccount>\n> = {\n  request: UserOperationRequest<TEntryPointVersion>;\n  aggregatedSignature: Hex;\n  signatureObj: Signature;\n};\n\nexport type MultisigUserOperationContext =\n  | {\n      userOpSignatureType: Extract<UserOpSignatureType, \"UPPERLIMIT\">;\n      aggregatedSignature?: Hex;\n      signatures?: Signature[];\n    }\n  | {\n      aggregatedSignature: Hex;\n      signatures: Signature[];\n      userOpSignatureType: Extract<UserOpSignatureType, \"ACTUAL\">;\n    };\n"]}