import { AccountNotFoundError, IncompatibleClientError, isSmartAccountClient, } from "@aa-sdk/core";
import { encodeFunctionData, } from "viem";
import { IPluginManagerAbi } from "../abis/IPluginManager.js";
export async function uninstallPlugin(client, { overrides, account = client.account, context, ...params }) {
    if (!account) {
        throw new AccountNotFoundError();
    }
    if (!isSmartAccountClient(client)) {
        throw new IncompatibleClientError("SmartAccountClient", "uninstallPlugin", client);
    }
    const callData = await encodeUninstallPluginUserOperation(params);
    return client.sendUserOperation({
        uo: callData,
        overrides,
        account,
        context,
    });
}
export async function encodeUninstallPluginUserOperation(params) {
    return encodeFunctionData({
        abi: IPluginManagerAbi,
        functionName: "uninstallPlugin",
        args: [
            params.pluginAddress,
            params.config ?? "0x",
            params.pluginUninstallData ?? "0x",
        ],
    });
}
//# sourceMappingURL=uninstallPlugin.js.map