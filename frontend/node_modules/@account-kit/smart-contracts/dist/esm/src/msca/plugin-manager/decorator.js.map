{"version":3,"file":"decorator.js","sourceRoot":"","sources":["../../../../../src/msca/plugin-manager/decorator.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,aAAa,EAA4B,MAAM,oBAAoB,CAAC;AAC7E,OAAO,EACL,eAAe,GAEhB,MAAM,sBAAsB,CAAC;AAE9B,OAAO,EAA4B,MAAM,oBAAoB,CAAC;AAC9D,OAAO,EAA8B,MAAM,sBAAsB,CAAC;AAgBlE;;;;;;;;;;;;;;GAcG;AACH,MAAM,UAAU,oBAAoB,CAOlC,MAA4C;IAE5C,OAAO;QACL,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC;QAC9D,eAAe,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC;KACnE,CAAC;AACJ,CAAC","sourcesContent":["import type {\n  GetEntryPointFromAccount,\n  SendUserOperationResult,\n  SmartContractAccount,\n} from \"@aa-sdk/core\";\nimport type { Chain, Client, Transport } from \"viem\";\nimport { installPlugin, type InstallPluginParams } from \"./installPlugin.js\";\nimport {\n  uninstallPlugin,\n  type UninstallPluginParams,\n} from \"./uninstallPlugin.js\";\n\nexport { type InstallPluginParams } from \"./installPlugin.js\";\nexport { type UninstallPluginParams } from \"./uninstallPlugin.js\";\n\nexport type PluginManagerActions<\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TEntryPointVersion extends GetEntryPointFromAccount<TAccount> = GetEntryPointFromAccount<TAccount>\n> = {\n  installPlugin: (\n    params: InstallPluginParams<TAccount>\n  ) => Promise<SendUserOperationResult<TEntryPointVersion>>;\n  uninstallPlugin: (\n    params: UninstallPluginParams<TAccount>\n  ) => Promise<SendUserOperationResult<TEntryPointVersion>>;\n};\n\n/**\n * Provides actions for managing plugins on a given client, including installing and uninstalling plugins.\n * NOTE: this is provided by default when using a modular account client\n *\n * @example\n * ```ts\n * import { pluginManagerActions } from \"@account-kit/smart-contracts\";\n * import { createSmartAccountClient } from \"@aa-sdk/core\";\n *\n * const client = createSmartAccountClient(...).extend(pluginManagerActions);\n * ```\n *\n * @param {Client<TTransport, TChain, TAccount>} client The client instance on which to manage plugins\n * @returns {PluginManagerActions<TAccount>} An object containing functions to install and uninstall plugins\n */\nexport function pluginManagerActions<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n>(\n  client: Client<TTransport, TChain, TAccount>\n): PluginManagerActions<TAccount> {\n  return {\n    installPlugin: async (params) => installPlugin(client, params),\n    uninstallPlugin: async (params) => uninstallPlugin(client, params),\n  };\n}\n"]}