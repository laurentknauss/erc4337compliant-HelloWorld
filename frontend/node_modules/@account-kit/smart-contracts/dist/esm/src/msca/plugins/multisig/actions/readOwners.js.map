{"version":3,"file":"readOwners.js","sourceRoot":"","sources":["../../../../../../../src/msca/plugins/multisig/actions/readOwners.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,oBAAoB,GAGrB,MAAM,cAAc,CAAC;AACtB,OAAO,EAA2C,MAAM,MAAM,CAAC;AAE/D,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAE9C,MAAM,CAAC,KAAK,UAAU,UAAU,CAO9B,MAA4C,EAC5C,IAA+D;IAE/D,MAAM,OAAO,GAAG,IAAI,EAAE,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;IAChD,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,oBAAoB,EAAE,CAAC;IACnC,CAAC;IACD,+DAA+D;IAC/D,4FAA4F;IAC5F,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,cAAc,CAAC,WAAW,CAC/C,MAAM,EACN,IAAI,EAAE,aAAa,CACpB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC1C,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import {\n  AccountNotFoundError,\n  type GetAccountParameter,\n  type SmartContractAccount,\n} from \"@aa-sdk/core\";\nimport { type Chain, type Client, type Transport } from \"viem\";\nimport type { GetPluginAddressParameter } from \"../../types.js\";\nimport { MultisigPlugin } from \"../plugin.js\";\n\nexport async function readOwners<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n>(\n  client: Client<TTransport, TChain, TAccount>,\n  args: GetPluginAddressParameter & GetAccountParameter<TAccount>\n) {\n  const account = args?.account ?? client.account;\n  if (!account) {\n    throw new AccountNotFoundError();\n  }\n  // TODO: check if the account actually has the plugin installed\n  // either via account loupe or checking if the supports interface call passes on the account\n  const [owners] = await MultisigPlugin.getContract(\n    client,\n    args?.pluginAddress\n  ).read.ownershipInfoOf([account.address]);\n  return owners;\n}\n"]}