export declare const UpgradeableModularAccountAbi: readonly [{
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "anEntryPoint";
        readonly type: "address";
        readonly internalType: "contract IEntryPoint";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "fallback";
    readonly stateMutability: "payable";
}, {
    readonly type: "receive";
    readonly stateMutability: "payable";
}, {
    readonly type: "function";
    readonly name: "entryPoint";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "contract IEntryPoint";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "execute";
    readonly inputs: readonly [{
        readonly name: "target";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "value";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "data";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [{
        readonly name: "result";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly stateMutability: "payable";
}, {
    readonly type: "function";
    readonly name: "executeBatch";
    readonly inputs: readonly [{
        readonly name: "calls";
        readonly type: "tuple[]";
        readonly internalType: "struct Call[]";
        readonly components: readonly [{
            readonly name: "target";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "value";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
    }];
    readonly outputs: readonly [{
        readonly name: "results";
        readonly type: "bytes[]";
        readonly internalType: "bytes[]";
    }];
    readonly stateMutability: "payable";
}, {
    readonly type: "function";
    readonly name: "executeFromPlugin";
    readonly inputs: readonly [{
        readonly name: "data";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [{
        readonly name: "returnData";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly stateMutability: "payable";
}, {
    readonly type: "function";
    readonly name: "executeFromPluginExternal";
    readonly inputs: readonly [{
        readonly name: "target";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "value";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "data";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly stateMutability: "payable";
}, {
    readonly type: "function";
    readonly name: "getExecutionFunctionConfig";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
    readonly outputs: readonly [{
        readonly name: "config";
        readonly type: "tuple";
        readonly internalType: "struct IAccountLoupe.ExecutionFunctionConfig";
        readonly components: readonly [{
            readonly name: "plugin";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "userOpValidationFunction";
            readonly type: "bytes21";
            readonly internalType: "FunctionReference";
        }, {
            readonly name: "runtimeValidationFunction";
            readonly type: "bytes21";
            readonly internalType: "FunctionReference";
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getExecutionHooks";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
    readonly outputs: readonly [{
        readonly name: "execHooks";
        readonly type: "tuple[]";
        readonly internalType: "struct IAccountLoupe.ExecutionHooks[]";
        readonly components: readonly [{
            readonly name: "preExecHook";
            readonly type: "bytes21";
            readonly internalType: "FunctionReference";
        }, {
            readonly name: "postExecHook";
            readonly type: "bytes21";
            readonly internalType: "FunctionReference";
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getInstalledPlugins";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "pluginAddresses";
        readonly type: "address[]";
        readonly internalType: "address[]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getNonce";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getPreValidationHooks";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
    readonly outputs: readonly [{
        readonly name: "preUserOpValidationHooks";
        readonly type: "bytes21[]";
        readonly internalType: "FunctionReference[]";
    }, {
        readonly name: "preRuntimeValidationHooks";
        readonly type: "bytes21[]";
        readonly internalType: "FunctionReference[]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "initialize";
    readonly inputs: readonly [{
        readonly name: "plugins";
        readonly type: "address[]";
        readonly internalType: "address[]";
    }, {
        readonly name: "pluginInitData";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "installPlugin";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "manifestHash";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "pluginInstallData";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }, {
        readonly name: "dependencies";
        readonly type: "bytes21[]";
        readonly internalType: "FunctionReference[]";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "onERC1155BatchReceived";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "from";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "ids";
        readonly type: "uint256[]";
        readonly internalType: "uint256[]";
    }, {
        readonly name: "values";
        readonly type: "uint256[]";
        readonly internalType: "uint256[]";
    }, {
        readonly name: "data";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "onERC1155Received";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "from";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "id";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "value";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "data";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "onERC721Received";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "from";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "tokenId";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "data";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "proxiableUUID";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "supportsInterface";
    readonly inputs: readonly [{
        readonly name: "interfaceId";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "tokensReceived";
    readonly inputs: readonly [{
        readonly name: "operator";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "from";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "to";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "userData";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }, {
        readonly name: "operatorData";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "uninstallPlugin";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "config";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }, {
        readonly name: "pluginUninstallData";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "upgradeToAndCall";
    readonly inputs: readonly [{
        readonly name: "newImplementation";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "data";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "payable";
}, {
    readonly type: "function";
    readonly name: "validateUserOp";
    readonly inputs: readonly [{
        readonly name: "userOp";
        readonly type: "tuple";
        readonly internalType: "struct UserOperation";
        readonly components: readonly [{
            readonly name: "sender";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "nonce";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "initCode";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "callData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "callGasLimit";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "verificationGasLimit";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "preVerificationGas";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "maxFeePerGas";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "maxPriorityFeePerGas";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "paymasterAndData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "signature";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
    }, {
        readonly name: "userOpHash";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "missingAccountFunds";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "validationData";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "event";
    readonly name: "ModularAccountInitialized";
    readonly inputs: readonly [{
        readonly name: "entryPoint";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "contract IEntryPoint";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "PluginInstalled";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "manifestHash";
        readonly type: "bytes32";
        readonly indexed: false;
        readonly internalType: "bytes32";
    }, {
        readonly name: "dependencies";
        readonly type: "bytes21[]";
        readonly indexed: false;
        readonly internalType: "FunctionReference[]";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "PluginUninstalled";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "onUninstallSucceeded";
        readonly type: "bool";
        readonly indexed: true;
        readonly internalType: "bool";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "Upgraded";
    readonly inputs: readonly [{
        readonly name: "implementation";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }];
    readonly anonymous: false;
}, {
    readonly type: "error";
    readonly name: "AlreadyInitialized";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "AlreadyInitializing";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "AlwaysDenyRule";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "ArrayLengthMismatch";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "DuplicateHookLimitExceeded";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }, {
        readonly name: "hook";
        readonly type: "bytes21";
        readonly internalType: "FunctionReference";
    }];
}, {
    readonly type: "error";
    readonly name: "DuplicatePreRuntimeValidationHookLimitExceeded";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }, {
        readonly name: "hook";
        readonly type: "bytes21";
        readonly internalType: "FunctionReference";
    }];
}, {
    readonly type: "error";
    readonly name: "DuplicatePreUserOpValidationHookLimitExceeded";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }, {
        readonly name: "hook";
        readonly type: "bytes21";
        readonly internalType: "FunctionReference";
    }];
}, {
    readonly type: "error";
    readonly name: "Erc4337FunctionNotAllowed";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
}, {
    readonly type: "error";
    readonly name: "ExecFromPluginExternalNotPermitted";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "target";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "value";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "data";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
}, {
    readonly type: "error";
    readonly name: "ExecFromPluginNotPermitted";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
}, {
    readonly type: "error";
    readonly name: "ExecutionFunctionAlreadySet";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
}, {
    readonly type: "error";
    readonly name: "IPluginFunctionNotAllowed";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
}, {
    readonly type: "error";
    readonly name: "InterfaceNotAllowed";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidDependenciesProvided";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidPluginManifest";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "MissingPluginDependency";
    readonly inputs: readonly [{
        readonly name: "dependency";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "NativeFunctionNotAllowed";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
}, {
    readonly type: "error";
    readonly name: "NativeTokenSpendingNotPermitted";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "NullFunctionReference";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "PluginAlreadyInstalled";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "PluginCallDenied";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "PluginDependencyViolation";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "PluginInstallCallbackFailed";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "revertReason";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
}, {
    readonly type: "error";
    readonly name: "PluginInterfaceNotSupported";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "PluginNotInstalled";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "PluginUninstallCallbackFailed";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "revertReason";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
}, {
    readonly type: "error";
    readonly name: "PostExecHookReverted";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "functionId";
        readonly type: "uint8";
        readonly internalType: "uint8";
    }, {
        readonly name: "revertReason";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
}, {
    readonly type: "error";
    readonly name: "PreExecHookReverted";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "functionId";
        readonly type: "uint8";
        readonly internalType: "uint8";
    }, {
        readonly name: "revertReason";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
}, {
    readonly type: "error";
    readonly name: "PreRuntimeValidationHookFailed";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "functionId";
        readonly type: "uint8";
        readonly internalType: "uint8";
    }, {
        readonly name: "revertReason";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
}, {
    readonly type: "error";
    readonly name: "RuntimeValidationFunctionAlreadySet";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }, {
        readonly name: "validationFunction";
        readonly type: "bytes21";
        readonly internalType: "FunctionReference";
    }];
}, {
    readonly type: "error";
    readonly name: "RuntimeValidationFunctionMissing";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
}, {
    readonly type: "error";
    readonly name: "RuntimeValidationFunctionReverted";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "functionId";
        readonly type: "uint8";
        readonly internalType: "uint8";
    }, {
        readonly name: "revertReason";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
}, {
    readonly type: "error";
    readonly name: "UnauthorizedCallContext";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "UnexpectedAggregator";
    readonly inputs: readonly [{
        readonly name: "plugin";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "functionId";
        readonly type: "uint8";
        readonly internalType: "uint8";
    }, {
        readonly name: "aggregator";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "UnrecognizedFunction";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
}, {
    readonly type: "error";
    readonly name: "UpgradeFailed";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "UserOpNotFromEntryPoint";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "UserOpValidationFunctionAlreadySet";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }, {
        readonly name: "validationFunction";
        readonly type: "bytes21";
        readonly internalType: "FunctionReference";
    }];
}, {
    readonly type: "error";
    readonly name: "UserOpValidationFunctionMissing";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
}];
