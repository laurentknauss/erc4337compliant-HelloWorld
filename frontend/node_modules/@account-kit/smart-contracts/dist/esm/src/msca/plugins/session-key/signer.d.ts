import { LocalAccountSigner, type SmartAccountSigner } from "@aa-sdk/core";
import type { PrivateKeyAccount, SignableMessage, TypedDataDefinition } from "viem";
import { z } from "zod";
export declare const SessionKeySignerSchema: z.ZodObject<{
    storageType: z.ZodDefault<z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<"local-storage">, z.ZodLiteral<"session-storage">]>, z.ZodType<Storage, z.ZodTypeDef, Storage>]>>;
    storageKey: z.ZodDefault<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    storageType: ("local-storage" | "session-storage" | Storage) & ("local-storage" | "session-storage" | Storage | undefined);
    storageKey: string;
}, {
    storageType?: "local-storage" | "session-storage" | Storage | undefined;
    storageKey?: string | undefined;
}>;
export type SessionKeySignerConfig = z.input<typeof SessionKeySignerSchema>;
export declare const SESSION_KEY_SIGNER_TYPE_PFX = "alchemy:session-key";
/**
 * A simple session key signer that uses localStorage or sessionStorage to store
 * a private key. If the key is not found, it will generate a new one and store
 * it in the storage.
 */
export declare class SessionKeySigner implements SmartAccountSigner<LocalAccountSigner<PrivateKeyAccount>> {
    signerType: string;
    inner: LocalAccountSigner<PrivateKeyAccount>;
    private storageType;
    private storageKey;
    /**
     * Initializes a new instance of a session key signer with the provided configuration. This will set the `signerType`, `storageKey`, and `storageType`. It will also manage the session key, either fetching it from storage or generating a new one if it doesn't exist.
     *
     * @example
     * ```ts
     * import { SessionKeySigner } from "@account-kit/smart-contracts";
     *
     * const signer = new SessionKeySigner();
     * ```
     *
     * @param {SessionKeySignerConfig} config_ the configuration for initializing the session key signer
     */
    constructor(config_?: SessionKeySignerConfig);
    /**
     * An async function that retrieves the address using the inner object's `getAddress` method.
     *
     * @example
     * ```ts
     * import { SessionKeySigner } from "@account-kit/smart-contracts";
     *
     * const signer = new SessionKeySigner();
     * const sessionKeyAddress = await signer.getAddress();
     * ```
     *
     * @returns {Promise<string>} A promise that resolves to the address as a string
     */
    getAddress: () => Promise<`0x${string}`>;
    /**
     * Signs a message using the inner signer.
     *
     * @example
     * ```ts
     * import { SessionKeySigner } from "@account-kit/smart-contracts";
     *
     * const signer = new SessionKeySigner();
     * const sessionKeyAddress = await signer.signMessage("hello");
     * ```
     *
     * @param {SignableMessage} msg The message to sign
     * @returns {Promise<Hex>} A promise that resolves to the signed message
     */
    signMessage: (msg: SignableMessage) => Promise<`0x${string}`>;
    /**
     * Signs the provided typed data using the inner signer.
     *
     * @example
     * ```ts
     * import { SessionKeySigner } from "@account-kit/smart-contracts";
     *
     * const signer = new SessionKeySigner();
     * console.log(await signer.signTypedData({
     *  types: {
     *    "Message": [{ name: "content", type: "string" }]
     *  },
     *  primaryType: "Message",
     *  message: { content: "Hello" },
     * }));
     * ```
     *
     * @template TTypedData - The typed data type, which extends `TypedData` or a record of unknown keys to unknown values.
     * @template TPrimaryType - The primary type of the typed data.
     *
     * @param {TypedDataDefinition<TTypedData, TPrimaryType>} params The parameters containing the typed data definition and primary type.
     * @returns {Promise<string>} A promise that resolves to the signed typed data as a string.
     */
    signTypedData: <const TTypedData extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        uint64?: undefined;
        bytes32?: undefined;
        bytes?: undefined;
        uint256?: undefined;
        bytes4?: undefined;
        bool?: undefined;
        bytes1?: undefined;
        uint32?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes5?: undefined;
        bytes6?: undefined;
        bytes11?: undefined;
        bytes7?: undefined;
        bytes9?: undefined;
        bytes27?: undefined;
        bytes22?: undefined;
        bytes8?: undefined;
        bytes10?: undefined;
        bytes12?: undefined;
        bytes13?: undefined;
        bytes14?: undefined;
        bytes15?: undefined;
        bytes16?: undefined;
        bytes17?: undefined;
        bytes18?: undefined;
        bytes19?: undefined;
        bytes20?: undefined;
        bytes21?: undefined;
        bytes23?: undefined;
        bytes24?: undefined;
        bytes25?: undefined;
        bytes26?: undefined;
        bytes28?: undefined;
        bytes29?: undefined;
        bytes30?: undefined;
        bytes31?: undefined;
        int8?: undefined;
        int16?: undefined;
        int24?: undefined;
        int32?: undefined;
        int40?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint8?: undefined;
        uint16?: undefined;
        uint24?: undefined;
        uint40?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType extends "EIP712Domain" | keyof TTypedData = keyof TTypedData>(params: TypedDataDefinition<TTypedData, TPrimaryType>) => Promise<`0x${string}`>;
    /**
     * Generates a new private key and stores it in the storage.
     *
     * @example
     * ```ts
     * import { SessionKeySigner } from "@account-kit/smart-contracts";
     *
     * const signer = new SessionKeySigner();
     * const newSessionKey = signer.generateNewKey();
     * ```
     *
     * @returns {Address} The public address of the new key.
     */
    generateNewKey: () => `0x${string}`;
}
