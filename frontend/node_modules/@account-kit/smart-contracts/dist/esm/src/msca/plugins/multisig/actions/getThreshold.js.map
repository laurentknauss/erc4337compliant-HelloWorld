{"version":3,"file":"getThreshold.js","sourceRoot":"","sources":["../../../../../../../src/msca/plugins/multisig/actions/getThreshold.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,oBAAoB,GAGrB,MAAM,cAAc,CAAC;AACtB,OAAO,EAA2C,MAAM,MAAM,CAAC;AAC/D,OAAO,EAAE,wBAAwB,EAAE,MAAM,qCAAqC,CAAC;AAE/E,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAC9C,OAAO,EAAE,4BAA4B,EAAE,MAAM,oBAAoB,CAAC;AAElE,MAAM,CAAC,KAAK,UAAU,YAAY,CAOhC,MAA4C,EAC5C,IAA+D;IAE/D,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;IAC/C,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,oBAAoB,EAAE,CAAC;IACnC,CAAC;IAED,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,EAAE,CAAC;QACvC,MAAM,IAAI,4BAA4B,EAAE,CAAC;IAC3C,CAAC;IAED,MAAM,CAAC,EAAE,SAAS,CAAC,GAAG,MAAM,cAAc,CAAC,WAAW,CACpD,MAAM,EACN,IAAI,CAAC,aAAa,CACnB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAE1C,OAAO,SAAS,KAAK,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;AACpE,CAAC","sourcesContent":["import {\n  AccountNotFoundError,\n  type GetAccountParameter,\n  type SmartContractAccount,\n} from \"@aa-sdk/core\";\nimport { type Chain, type Client, type Transport } from \"viem\";\nimport { isMultisigModularAccount } from \"../../../account/multisigAccount.js\";\nimport type { GetPluginAddressParameter } from \"../../types.js\";\nimport { MultisigPlugin } from \"../plugin.js\";\nimport { MultisigAccountExpectedError } from \"../../../errors.js\";\n\nexport async function getThreshold<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n>(\n  client: Client<TTransport, TChain, TAccount>,\n  args: GetPluginAddressParameter & GetAccountParameter<TAccount>\n) {\n  const account = args.account ?? client.account;\n  if (!account) {\n    throw new AccountNotFoundError();\n  }\n\n  if (!isMultisigModularAccount(account)) {\n    throw new MultisigAccountExpectedError();\n  }\n\n  const [, threshold] = await MultisigPlugin.getContract(\n    client,\n    args.pluginAddress\n  ).read.ownershipInfoOf([account.address]);\n\n  return threshold === 0n ? account.getLocalThreshold() : threshold;\n}\n"]}