{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../src/msca/account-loupe/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { Address, Hex } from \"viem\";\n\nexport type FunctionId = Hex;\n\n// Treats the first 20 bytes as an address, and the last byte as a identifier.\nexport type FunctionReference = Hex;\n\nexport type ExecutionFunctionConfig = {\n  plugin: Address;\n  userOpValidationFunction: FunctionReference;\n  runtimeValidationFunction: FunctionReference;\n};\n\nexport type ExecutionHooks = {\n  preExecHook: FunctionReference;\n  postExecHook: FunctionReference;\n};\n\nexport type PreValidationHooks = [\n  readonly FunctionReference[],\n  readonly FunctionReference[]\n];\n"]}