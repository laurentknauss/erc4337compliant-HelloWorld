{"version":3,"file":"uninstallPlugin.js","sourceRoot":"","sources":["../../../../../src/msca/plugin-manager/uninstallPlugin.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,oBAAoB,EACpB,uBAAuB,EACvB,oBAAoB,GAOrB,MAAM,cAAc,CAAC;AACtB,OAAO,EACL,kBAAkB,GAMnB,MAAM,MAAM,CAAC;AACd,OAAO,EAAE,iBAAiB,EAAE,MAAM,2BAA2B,CAAC;AAkB9D,MAAM,CAAC,KAAK,UAAU,eAAe,CAUnC,MAA4C,EAC5C,EACE,SAAS,EACT,OAAO,GAAG,MAAM,CAAC,OAAO,EACxB,OAAO,EACP,GAAG,MAAM,EACiC;IAE5C,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,oBAAoB,EAAE,CAAC;IACnC,CAAC;IAED,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAE,CAAC;QAClC,MAAM,IAAI,uBAAuB,CAC/B,oBAAoB,EACpB,iBAAiB,EACjB,MAAM,CACP,CAAC;IACJ,CAAC;IAED,MAAM,QAAQ,GAAG,MAAM,kCAAkC,CAAC,MAAM,CAAC,CAAC;IAElE,OAAO,MAAM,CAAC,iBAAiB,CAAC;QAC9B,EAAE,EAAE,QAAQ;QACZ,SAAS;QACT,OAAO;QACP,OAAO;KACR,CAAC,CAAC;AACL,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,kCAAkC,CACtD,MAAwE;IAExE,OAAO,kBAAkB,CAAC;QACxB,GAAG,EAAE,iBAAiB;QACtB,YAAY,EAAE,iBAAiB;QAC/B,IAAI,EAAE;YACJ,MAAM,CAAC,aAAa;YACpB,MAAM,CAAC,MAAM,IAAI,IAAI;YACrB,MAAM,CAAC,mBAAmB,IAAI,IAAI;SACnC;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["import {\n  AccountNotFoundError,\n  IncompatibleClientError,\n  isSmartAccountClient,\n  type GetAccountParameter,\n  type GetContextParameter,\n  type GetEntryPointFromAccount,\n  type SmartContractAccount,\n  type UserOperationContext,\n  type UserOperationOverridesParameter,\n} from \"@aa-sdk/core\";\nimport {\n  encodeFunctionData,\n  type Address,\n  type Chain,\n  type Client,\n  type Hash,\n  type Transport,\n} from \"viem\";\nimport { IPluginManagerAbi } from \"../abis/IPluginManager.js\";\n\nexport type UninstallPluginParams<\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TContext extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined,\n  TEntryPointVersion extends GetEntryPointFromAccount<TAccount> = GetEntryPointFromAccount<TAccount>\n> = {\n  pluginAddress: Address;\n  config?: Hash;\n  pluginUninstallData?: Hash;\n} & UserOperationOverridesParameter<TEntryPointVersion> &\n  GetAccountParameter<TAccount> &\n  GetContextParameter<TContext>;\n\nexport async function uninstallPlugin<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TContext extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n>(\n  client: Client<TTransport, TChain, TAccount>,\n  {\n    overrides,\n    account = client.account,\n    context,\n    ...params\n  }: UninstallPluginParams<TAccount, TContext>\n) {\n  if (!account) {\n    throw new AccountNotFoundError();\n  }\n\n  if (!isSmartAccountClient(client)) {\n    throw new IncompatibleClientError(\n      \"SmartAccountClient\",\n      \"uninstallPlugin\",\n      client\n    );\n  }\n\n  const callData = await encodeUninstallPluginUserOperation(params);\n\n  return client.sendUserOperation({\n    uo: callData,\n    overrides,\n    account,\n    context,\n  });\n}\n\nexport async function encodeUninstallPluginUserOperation(\n  params: Omit<UninstallPluginParams, \"account\" | \"overrides\" | \"context\">\n) {\n  return encodeFunctionData({\n    abi: IPluginManagerAbi,\n    functionName: \"uninstallPlugin\",\n    args: [\n      params.pluginAddress,\n      params.config ?? \"0x\",\n      params.pluginUninstallData ?? \"0x\",\n    ],\n  });\n}\n"]}