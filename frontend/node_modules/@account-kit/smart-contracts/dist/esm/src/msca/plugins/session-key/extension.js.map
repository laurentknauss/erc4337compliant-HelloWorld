{"version":3,"file":"extension.js","sourceRoot":"","sources":["../../../../../../src/msca/plugins/session-key/extension.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  GetEntryPointFromAccount,\n  UserOperationOverridesParameter,\n} from \"@aa-sdk/core\";\nimport {\n  AccountNotFoundError,\n  isSmartAccountClient,\n  type GetAccountParameter,\n  type IsUndefined,\n  type SendUserOperationResult,\n  type SmartContractAccount,\n  type UserOperationOverrides,\n} from \"@aa-sdk/core\";\nimport type { Address, Chain, Client, Hex, Transport } from \"viem\";\nimport type { GetPluginAddressParameter } from \"../types.js\";\nimport {\n  SessionKeyPlugin,\n  sessionKeyPluginActions as sessionKeyPluginActions_,\n  type SessionKeyPluginActions as SessionKeyPluginActions_,\n} from \"./plugin.js\";\nimport { buildSessionKeysToRemoveStruct } from \"./utils.js\";\n\nexport type SessionKeyPluginActions<\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TEntryPointVersion extends GetEntryPointFromAccount<TAccount> = GetEntryPointFromAccount<TAccount>\n> = Omit<\n  SessionKeyPluginActions_<TAccount>,\n  | \"removeSessionKey\"\n  | \"addSessionKey\"\n  | \"rotateSessionKey\"\n  | \"updateKeyPermissions\"\n> & {\n  isAccountSessionKey: (\n    args: { key: Address } & GetPluginAddressParameter &\n      GetAccountParameter<TAccount>\n  ) => Promise<boolean>;\n\n  getAccountSessionKeys: (\n    args: GetPluginAddressParameter & GetAccountParameter<TAccount>\n  ) => Promise<ReadonlyArray<Address>>;\n\n  removeSessionKey: (\n    args: { key: Address } & GetPluginAddressParameter &\n      GetAccountParameter<TAccount> &\n      UserOperationOverridesParameter<TEntryPointVersion>\n  ) => Promise<SendUserOperationResult<TEntryPointVersion>>;\n\n  addSessionKey: (\n    args: {\n      key: Address;\n      permissions: Hex[];\n      tag: Hex;\n    } & GetPluginAddressParameter &\n      GetAccountParameter<TAccount> &\n      UserOperationOverridesParameter<TEntryPointVersion>\n  ) => Promise<SendUserOperationResult<TEntryPointVersion>>;\n\n  rotateSessionKey: (\n    args: {\n      oldKey: Address;\n      newKey: Address;\n    } & GetPluginAddressParameter &\n      GetAccountParameter<TAccount> &\n      UserOperationOverridesParameter<TEntryPointVersion>\n  ) => Promise<SendUserOperationResult<TEntryPointVersion>>;\n\n  updateSessionKeyPermissions: (\n    args: {\n      key: Address;\n      permissions: Hex[];\n    } & GetPluginAddressParameter &\n      GetAccountParameter<TAccount> &\n      UserOperationOverridesParameter<TEntryPointVersion>\n  ) => Promise<SendUserOperationResult<TEntryPointVersion>>;\n} & (IsUndefined<TAccount> extends false\n    ? {\n        getAccountSessionKeys: (\n          args?: GetPluginAddressParameter & GetAccountParameter<TAccount>\n        ) => Promise<ReadonlyArray<Address>>;\n      }\n    : {});\n\n/**\n * Creates actions for managing session keys in a smart contract associated with a client, including adding, removing, rotating, and updating session key permissions.\n *\n * @example\n * ```ts\n * import { createModularAccountAlchemyClient, sessionKeyPluginActions } from \"@account-kit/smart-contracts\";\n *\n * const client = createModularAccountAlchemyClient(...).extend(sessionKeyPluginActions);\n * ```\n *\n * @param {Client<TTransport, TChain, TAccount>} client The client instance to use for managing session keys\n * @returns {SessionKeyPluginActions<TAccount>} An object containing methods for session key management and interaction with the smart contract\n */\nexport const sessionKeyPluginActions: <\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n>(\n  client: Client<TTransport, TChain, TAccount>\n) => SessionKeyPluginActions<TAccount> = <\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TEntryPointVersion extends GetEntryPointFromAccount<TAccount> = GetEntryPointFromAccount<TAccount>\n>(\n  client: Client<TTransport, TChain, TAccount>\n) => {\n  const {\n    removeSessionKey,\n    addSessionKey,\n    rotateSessionKey,\n    updateKeyPermissions,\n    executeWithSessionKey,\n    ...og\n  } = sessionKeyPluginActions_<TTransport, TChain, TAccount>(client);\n\n  // The session key plugin returns an opaque error when the permissions check\n  // fails. We want the SDK to return a helpful error instead. After validation\n  // fails, rerun the user op simulation but using state overrides to replace\n  // the code of the session key plugin with a version that produces descriptive\n  // errors.\n  const fixedExecuteWithSessionKey: typeof executeWithSessionKey = async (\n    ...originalArgs\n  ) => {\n    let initialError: unknown;\n    try {\n      return await executeWithSessionKey(...originalArgs);\n    } catch (error) {\n      initialError = error;\n    }\n    const details = getRpcErrorMessageFromViemError(initialError);\n    if (!details?.includes(\"AA23 reverted (or OOG)\")) {\n      throw initialError;\n    }\n    if (!isSmartAccountClient(client) || !client.chain) {\n      throw initialError;\n    }\n    const {\n      args,\n      overrides,\n      context,\n      account = client.account,\n    } = originalArgs[0];\n    if (!account) {\n      throw initialError;\n    }\n    const data = og.encodeExecuteWithSessionKey({ args });\n    const sessionKeyPluginAddress =\n      SessionKeyPlugin.meta.addresses[client.chain.id];\n    // The bytecode is 10kb of hex. Only import it if needed.\n    const { DEBUG_SESSION_KEY_BYTECODE } = await import(\n      \"./debug-session-key-bytecode.js\"\n    );\n    const updatedOverrides: UserOperationOverrides<TEntryPointVersion> = {\n      ...(overrides as UserOperationOverrides<TEntryPointVersion>),\n      stateOverride: [\n        ...(overrides?.stateOverride ?? []),\n        {\n          address: sessionKeyPluginAddress,\n          code: DEBUG_SESSION_KEY_BYTECODE,\n        },\n      ],\n    };\n    try {\n      await client.buildUserOperation({\n        uo: data,\n        overrides: updatedOverrides,\n        context,\n        account,\n      });\n      // We expect this to fail because we just saw the same user op fail a\n      // moment ago. It could succeed if the state of the chain has changed but\n      // there's not much we can do with a successful result so return the\n      // original error.\n      throw initialError;\n    } catch (improvedError) {\n      const details = getRpcErrorMessageFromViemError(improvedError) ?? \"\";\n      const reason = details.match(/AA23 reverted: (.+)/)?.[1];\n      if (!reason) {\n        throw initialError;\n      }\n      throw new SessionKeyPermissionError(reason);\n    }\n  };\n\n  return {\n    ...og,\n\n    executeWithSessionKey: fixedExecuteWithSessionKey,\n\n    isAccountSessionKey: async ({\n      key,\n      pluginAddress,\n      account = client.account,\n    }) => {\n      if (!account) throw new AccountNotFoundError();\n\n      const contract = SessionKeyPlugin.getContract(client, pluginAddress);\n\n      return await contract.read.isSessionKeyOf([account.address, key]);\n    },\n\n    getAccountSessionKeys: async (\n      args: GetPluginAddressParameter & GetAccountParameter<TAccount>\n    ) => {\n      const account = args?.account ?? client.account;\n      if (!account) throw new AccountNotFoundError();\n\n      const contract = SessionKeyPlugin.getContract(\n        client,\n        args?.pluginAddress\n      );\n\n      return await contract.read.sessionKeysOf([account.address]);\n    },\n\n    removeSessionKey: async ({\n      key,\n      overrides,\n      account = client.account,\n      pluginAddress,\n    }) => {\n      if (!account) throw new AccountNotFoundError();\n\n      const sessionKeysToRemove = await buildSessionKeysToRemoveStruct(client, {\n        keys: [key],\n        account,\n        pluginAddress,\n      });\n\n      return removeSessionKey({\n        args: [key, sessionKeysToRemove[0].predecessor],\n        overrides: overrides as UserOperationOverrides<TEntryPointVersion>,\n        account,\n      });\n    },\n\n    addSessionKey: async ({\n      key,\n      tag,\n      permissions,\n      overrides,\n      pluginAddress,\n      account = client.account,\n    }) => {\n      if (!account) throw new AccountNotFoundError();\n\n      return addSessionKey({\n        args: [key, tag, permissions],\n        overrides: overrides as UserOperationOverrides<TEntryPointVersion>,\n        account,\n        pluginAddress,\n      });\n    },\n\n    rotateSessionKey: async ({\n      newKey,\n      oldKey,\n      overrides,\n      pluginAddress,\n      account = client.account,\n    }) => {\n      if (!account) throw new AccountNotFoundError();\n\n      const contract = SessionKeyPlugin.getContract(client, pluginAddress);\n\n      const predecessor = await contract.read.findPredecessor([\n        account.address,\n        oldKey,\n      ]);\n\n      return rotateSessionKey({\n        args: [oldKey, predecessor, newKey],\n        overrides: overrides as UserOperationOverrides<TEntryPointVersion>,\n        account,\n        pluginAddress,\n      });\n    },\n\n    updateSessionKeyPermissions: async ({\n      key,\n      permissions,\n      overrides,\n      pluginAddress,\n      account = client.account,\n    }) => {\n      if (!account) throw new AccountNotFoundError();\n\n      return updateKeyPermissions({\n        args: [key, permissions],\n        overrides: overrides as UserOperationOverrides<\n          GetEntryPointFromAccount<TAccount>\n        >,\n        account,\n        pluginAddress,\n      });\n    },\n  };\n};\n\nfunction getRpcErrorMessageFromViemError(error: unknown): string | undefined {\n  const details = (error as any)?.details;\n  return typeof details === \"string\" ? details : undefined;\n}\n\nclass SessionKeyPermissionError extends Error {}\n"]}