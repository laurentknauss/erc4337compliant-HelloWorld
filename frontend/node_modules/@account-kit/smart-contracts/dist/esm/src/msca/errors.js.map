{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../../../src/msca/errors.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAEzC;;GAEG;AACH,MAAM,OAAO,+BAAgC,SAAQ,SAAS;IAE5D;QACE,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAF/B;;;;mBAAO,iCAAiC;WAAC;IAGlD,CAAC;CACF;AAED;;GAEG;AACH,MAAM,OAAO,4BAA6B,SAAQ,SAAS;IAEzD;QACE,KAAK,CAAC,+CAA+C,CAAC,CAAC;QAFhD;;;;mBAAO,8BAA8B;WAAC;IAG/C,CAAC;CACF;AAED;;GAEG;AACH,MAAM,OAAO,4BAA6B,SAAQ,SAAS;IAEzD;QACE,KAAK,CAAC,mDAAmD,CAAC,CAAC;QAFpD;;;;mBAAO,8BAA8B;WAAC;IAG/C,CAAC;CACF;AAED;;GAEG;AACH,MAAM,OAAO,6BAA8B,SAAQ,SAAS;IAE1D;QACE,KAAK,CAAC,iDAAiD,CAAC,CAAC;QAFlD;;;;mBAAO,+BAA+B;WAAC;IAGhD,CAAC;CACF","sourcesContent":["import { BaseError } from \"@aa-sdk/core\";\n\n/**\n * Error thrown when the aggregated signature is invalid\n */\nexport class InvalidAggregatedSignatureError extends BaseError {\n  override name = \"InvalidAggregatedSignatureError\";\n  constructor() {\n    super(\"Invalid aggregated signature\");\n  }\n}\n\n/**\n * Error thrown when the context signature is invalid\n */\nexport class InvalidContextSignatureError extends BaseError {\n  override name = \"InvalidContextSignatureError\";\n  constructor() {\n    super(\"Expected context.signature to be a hex string\");\n  }\n}\n\n/**\n * Error thrown when the expected account is not a multisig modular account\n */\nexport class MultisigAccountExpectedError extends BaseError {\n  override name = \"MultisigAccountExpectedError\";\n  constructor() {\n    super(\"Expected account to be a multisig modular account\");\n  }\n}\n\n/**\n * Error thrown when a multisig user op is missing a signature\n */\nexport class MultisigMissingSignatureError extends BaseError {\n  override name = \"MultisigMissingSignatureError\";\n  constructor() {\n    super(\"UserOp must have at least one signature already\");\n  }\n}\n"]}