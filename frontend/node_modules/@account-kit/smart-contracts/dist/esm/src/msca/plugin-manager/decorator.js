import { installPlugin } from "./installPlugin.js";
import { uninstallPlugin, } from "./uninstallPlugin.js";
export {} from "./installPlugin.js";
export {} from "./uninstallPlugin.js";
/**
 * Provides actions for managing plugins on a given client, including installing and uninstalling plugins.
 * NOTE: this is provided by default when using a modular account client
 *
 * @example
 * ```ts
 * import { pluginManagerActions } from "@account-kit/smart-contracts";
 * import { createSmartAccountClient } from "@aa-sdk/core";
 *
 * const client = createSmartAccountClient(...).extend(pluginManagerActions);
 * ```
 *
 * @param {Client<TTransport, TChain, TAccount>} client The client instance on which to manage plugins
 * @returns {PluginManagerActions<TAccount>} An object containing functions to install and uninstall plugins
 */
export function pluginManagerActions(client) {
    return {
        installPlugin: async (params) => installPlugin(client, params),
        uninstallPlugin: async (params) => uninstallPlugin(client, params),
    };
}
//# sourceMappingURL=decorator.js.map