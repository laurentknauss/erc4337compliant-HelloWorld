import type { Signature } from "../types";
/**
 * Formats a collection of Signature objects into a single aggregated signature.
 * The format is in the form of EOA_SIGS | CONTRACT_SIG_DATAS. The signatures are ordered
 * by signer address. The EOA SIGS contain the 65 signautre data for EOA signers and 65 bytes containing SIGNER | OFFSET | V for contract signers.
 * The OFFSET is used to fetch the signature data from the CONTRACT_SIG_DATAS.
 *
 * @param {Signature[]} signatures the array of Signature objects to combine into the correct aggregated signature format excluding the upper limits
 * @param {boolean} usingMaxValues a boolean indicating wether or not the UserOperation is using the UPPER_LIMIT for the gas and fee values
 * @returns {Hex} the Hex representation of the signature
 */
export declare const formatSignatures: (signatures: Signature[], usingMaxValues?: boolean) => `0x${string}`;
