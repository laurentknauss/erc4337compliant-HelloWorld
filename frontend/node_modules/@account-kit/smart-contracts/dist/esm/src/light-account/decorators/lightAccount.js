import { transferOwnership, } from "../actions/transferOwnership.js";
/**
 * Provides a set of actions for managing a light account client, including transferring ownership.
 *
 * @example
 * ```ts
 * import { lightAccountClientActions, createLightAccount } from "@account-kit/smart-contracts";
 * import { createAlchemySmartAccountClient } from "@account-kit/infra";
 * import { sepolia } from "@account-kit/infra";
 *
 * const smartAccountClient = createAlchemySmartAccountClient({
 *  account: await createLightAccount(...),
 *  apiKey: "your-api-key",
 *  chain: sepolia,
 * }).extend(lightAccountClientActions);
 * ```
 *
 * @param {Client<TTransport, TChain, TAccount>} client The client instance for which to provide the light account actions
 * @returns {LightAccountClientActions<TSigner, TAccount>} An object containing the available light account client actions
 */
export const lightAccountClientActions = (client) => ({
    transferOwnership: async (args) => transferOwnership(client, args),
});
//# sourceMappingURL=lightAccount.js.map