export declare const SessionKeyPermissionsUpdatesAbi: readonly [{
    readonly type: "function";
    readonly name: "setAccessListType";
    readonly inputs: readonly [{
        readonly name: "contractAccessControlType";
        readonly type: "uint8";
        readonly internalType: "enum ISessionKeyPlugin.ContractAccessControlType";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "setERC20SpendLimit";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "spendLimit";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "refreshInterval";
        readonly type: "uint48";
        readonly internalType: "uint48";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "setGasSpendLimit";
    readonly inputs: readonly [{
        readonly name: "spendLimit";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "refreshInterval";
        readonly type: "uint48";
        readonly internalType: "uint48";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "setNativeTokenSpendLimit";
    readonly inputs: readonly [{
        readonly name: "spendLimit";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "refreshInterval";
        readonly type: "uint48";
        readonly internalType: "uint48";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "setRequiredPaymaster";
    readonly inputs: readonly [{
        readonly name: "requiredPaymaster";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "updateAccessListAddressEntry";
    readonly inputs: readonly [{
        readonly name: "contractAddress";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "isOnList";
        readonly type: "bool";
        readonly internalType: "bool";
    }, {
        readonly name: "checkSelectors";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "updateAccessListFunctionEntry";
    readonly inputs: readonly [{
        readonly name: "contractAddress";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }, {
        readonly name: "isOnList";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "updateTimeRange";
    readonly inputs: readonly [{
        readonly name: "validAfter";
        readonly type: "uint48";
        readonly internalType: "uint48";
    }, {
        readonly name: "validUntil";
        readonly type: "uint48";
        readonly internalType: "uint48";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}];
//# sourceMappingURL=SessionKeyPermissionsUpdatesAbi.d.ts.map