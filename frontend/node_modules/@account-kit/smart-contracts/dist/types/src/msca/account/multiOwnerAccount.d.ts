import type { EntryPointParameter, SmartAccountSigner, SmartContractAccountWithSigner, ToSmartContractAccountParams } from "@aa-sdk/core";
import { type Address, type Chain, type Hex, type Transport } from "viem";
export type MultiOwnerModularAccount<TSigner extends SmartAccountSigner = SmartAccountSigner> = SmartContractAccountWithSigner<"MultiOwnerModularAccount", TSigner, "0.6.0">;
export type CreateMultiOwnerModularAccountParams<TTransport extends Transport = Transport, TSigner extends SmartAccountSigner = SmartAccountSigner, TEntryPointVersion extends "0.6.0" = "0.6.0"> = Pick<ToSmartContractAccountParams<"MultiOwnerModularAccount", TTransport, Chain, TEntryPointVersion>, "transport" | "chain"> & {
    signer: TSigner;
    salt?: bigint;
    factoryAddress?: Address;
    initCode?: Hex;
    owners?: Address[];
    accountAddress?: Address;
} & EntryPointParameter<TEntryPointVersion, Chain>;
export declare function createMultiOwnerModularAccount<TTransport extends Transport = Transport, TSigner extends SmartAccountSigner = SmartAccountSigner>(config: CreateMultiOwnerModularAccountParams<TTransport, TSigner>): Promise<MultiOwnerModularAccount<TSigner>>;
//# sourceMappingURL=multiOwnerAccount.d.ts.map