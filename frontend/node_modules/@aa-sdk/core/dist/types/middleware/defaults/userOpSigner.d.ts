import type { ClientMiddlewareFn } from "../types";
/**
 * Provides a default middleware function for signing user operations with a client account. This function validates the request and adds the signature to it.
 * This is already included in the client returned from `createSmartAccountClient`
 *
 * @param {UserOperationStruct} struct The user operation structure to be signed
 * @param {*} context The middleware context containing the client and account information
 * @param {Client} context.client The client object, which should include account and chain information
 * @param {Account} [context.account] Optional, the account used for signing, defaults to the client's account if not provided
 * @returns {Promise<UserOperationStruct>} A promise that resolves to the signed user operation structure
 */
export declare const defaultUserOpSigner: ClientMiddlewareFn;
//# sourceMappingURL=userOpSigner.d.ts.map