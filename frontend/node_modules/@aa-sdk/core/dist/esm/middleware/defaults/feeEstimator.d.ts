import type { MiddlewareClient } from "../actions";
import type { ClientMiddlewareFn } from "../types";
/**
 * Default fee estimator middleware function that estimates the maximum fee per gas and maximum priority fee per gas for a given client and applies the necessary overrides and fee options.
 *
 * @example
 * ```ts
 * import { createSmartAccountClient, defaultFeeEstimator, createBundlerClient } from "@aa-sdk/core";
 *
 * const bundlerClient = createBundlerClient(...);
 *
 * // NOTE: this is already provided by the smart account client
 * const client = createSmartAccountClient({
 *  feeEstimator: defaultFeeEstimator(bundlerClient),
 *  ...otherParams
 * });
 * ```
 *
 * @template {MiddlewareClient} C The type of the client
 * @param {C} client The client to perform the fee estimation
 * @returns {ClientMiddlewareFn} A middleware function that takes in the struct and options, estimates the fees, and updates the struct with the estimated fees
 */
export declare function defaultFeeEstimator<C extends MiddlewareClient>(client: C): ClientMiddlewareFn;
