{"version":3,"file":"transaction.js","sourceRoot":"","sources":["../../../src/errors/transaction.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAEtC;;GAEG;AACH,MAAM,OAAO,8BAA+B,SAAQ,SAAS;IAG3D;;OAEG,CAAC;QACF,KAAK,CAAC,oDAAoD,CAAC,CAAC;QALrD;;;;mBAAO,gCAAgC;WAAC;IAMjD,CAAC;CACF;AAED;;GAEG;AACH,MAAM,OAAO,4BAA6B,SAAQ,SAAS;IAGzD;;;;OAIG;IACH,YAAY,IAAS;QACnB,KAAK,CAAC,iDAAiD,IAAI,EAAE,CAAC,CAAC;QARxD;;;;mBAAO,8BAA8B;WAAC;IAS/C,CAAC;CACF","sourcesContent":["import type { Hex } from \"viem\";\nimport { BaseError } from \"./base.js\";\n\n/**\n * Error thrown when a transaction is missing the `to` address parameter. This class extends the `BaseError` class.\n */\nexport class TransactionMissingToParamError extends BaseError {\n  override name = \"TransactionMissingToParamError\";\n\n  /**\n   * Throws an error indicating that a transaction is missing the `to` address in the request.\n   */ constructor() {\n    super(\"Transaction is missing `to` address set on request\");\n  }\n}\n\n/**\n * Represents an error that occurs when a transaction cannot be found for a given user operation. This error extends from `BaseError`. The `hash` of the transaction is provided to indicate which transaction could not be found.\n */\nexport class FailedToFindTransactionError extends BaseError {\n  override name = \"FailedToFindTransactionError\";\n\n  /**\n   * Constructs a new error message indicating a failure to find the transaction for the specified user operation hash.\n   *\n   * @param {Hex} hash The hexadecimal value representing the user operation hash.\n   */\n  constructor(hash: Hex) {\n    super(`Failed to find transaction for user operation ${hash}`);\n  }\n}\n"]}