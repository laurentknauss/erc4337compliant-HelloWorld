{"version":3,"file":"entrypoint.js","sourceRoot":"","sources":["../../../src/errors/entrypoint.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAEtC;;GAEG;AACH,MAAM,OAAO,uBAAwB,SAAQ,SAAS;IAGpD;;;;;OAKG;IACH,YAAY,KAAY,EAAE,iBAAsB;QAC9C,KAAK,CACH;YACE,2BAA2B,iBAAiB,eAAe,KAAK,CAAC,IAAI,GAAG;YACxE,qBAAqB;SACtB,CAAC,IAAI,CAAC,IAAI,CAAC,CACb,CAAC;QAdK;;;;mBAAO,yBAAyB;WAAC;IAe1C,CAAC;CACF;AAED;;GAEG;AACH,MAAM,OAAO,sBAAuB,SAAQ,SAAS;IAGnD;;;;;OAKG;IACH,YAAY,KAAY,EAAE,iBAAsB;QAC9C,KAAK,CACH,2CAA2C,iBAAiB,QAAQ,KAAK,CAAC,IAAI,GAAG,CAClF,CAAC;QAXK;;;;mBAAO,wBAAwB;WAAC;IAYzC,CAAC;CACF","sourcesContent":["import type { Chain } from \"viem\";\nimport { BaseError } from \"./base.js\";\n\n/**\n * Represents an error thrown when an entry point is not found for a specific chain and entry point version. This error indicates that a default entry point does not exist for the given chain and version, and suggests providing an override.\n */\nexport class EntryPointNotFoundError extends BaseError {\n  override name = \"EntryPointNotFoundError\";\n\n  /**\n   * Constructs an error message indicating that no default entry point exists for the given chain and entry point version.\n   *\n   * @param {Chain} chain The blockchain network for which the entry point is being queried\n   * @param {any} entryPointVersion The version of the entry point for which no default exists\n   */\n  constructor(chain: Chain, entryPointVersion: any) {\n    super(\n      [\n        `No default entry point v${entryPointVersion} exists for ${chain.name}.`,\n        `Supply an override.`,\n      ].join(\"\\n\")\n    );\n  }\n}\n\n/**\n * Represents an error thrown when an invalid entry point version is encountered for a specific chain. This error extends the `BaseError` class.\n */\nexport class InvalidEntryPointError extends BaseError {\n  override name = \"InvalidEntryPointError\";\n\n  /**\n   * Constructs an error indicating an invalid entry point version for a specific chain.\n   *\n   * @param {Chain} chain The chain object containing information about the blockchain\n   * @param {any} entryPointVersion The entry point version that is invalid\n   */\n  constructor(chain: Chain, entryPointVersion: any) {\n    super(\n      `Invalid entry point: unexpected version ${entryPointVersion} for ${chain.name}.`\n    );\n  }\n}\n"]}