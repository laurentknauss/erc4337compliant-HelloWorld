{"version":3,"file":"signer.js","sourceRoot":"","sources":["../../../src/errors/signer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAEtC;;GAEG;AACH,MAAM,OAAO,sBAAuB,SAAQ,SAAS;IAGnD;;;;OAIG;IACH,YAAY,UAAmB;QAC7B,KAAK,CACH;YACE,6DAA6D;YAC7D,UAAU,IAAI,gCAAgC;SAC/C,CAAC,IAAI,CAAC,IAAI,CAAC,CACb,CAAC;QAbK;;;;mBAAO,wBAAwB;WAAC;IAczC,CAAC;CACF","sourcesContent":["import { BaseError } from \"./base.js\";\n\n/**\n * Represents an error thrown when an invalid signer type is provided to the SmartAccountSigner.\n */\nexport class InvalidSignerTypeError extends BaseError {\n  override name = \"InvalidSignerTypeError\";\n\n  /**\n   * Constructs an error message when an invalid signer type is passed to SmartAccountSigner.\n   *\n   * @param {string} [signerType] An optional parameter specifying the signer type. If not provided, a default error message will be used.\n   */\n  constructor(signerType?: string) {\n    super(\n      [\n        \"Invalid signer type parameter passed to SmartAccountSigner.\",\n        signerType ?? \"A signerType must be provided.\",\n      ].join(\"\\n\")\n    );\n  }\n}\n"]}