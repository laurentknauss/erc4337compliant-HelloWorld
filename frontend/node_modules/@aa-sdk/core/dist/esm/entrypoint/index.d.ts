import { type Chain } from "viem";
import type { DefaultEntryPointVersion, EntryPointDefRegistry, EntryPointRegistry, EntryPointVersion, GetEntryPointOptions } from "./types.js";
export declare const defaultEntryPointVersion: DefaultEntryPointVersion;
export declare const entryPointRegistry: EntryPointRegistry;
/**
 * Checks if the given value is a valid key of the EntryPointRegistry.
 *
 * @example
 * ```ts
 * import { isEntryPointVersion } from "@aa-sdk/core";
 *
 * const valid = isEntryPointVersion("0.6.0");
 * const invalid = isEntryPointVersion("0.8.0");
 * ```
 *
 * @param {*} value The value to be checked
 * @returns {boolean} true if the value is a valid key of EntryPointRegistry, false otherwise
 */
export declare const isEntryPointVersion: (value: any) => value is keyof EntryPointRegistry<Chain>;
export declare function getEntryPoint<TEntryPointVersion extends EntryPointVersion = DefaultEntryPointVersion, TChain extends Chain = Chain>(chain: TChain, options: GetEntryPointOptions<TEntryPointVersion>): EntryPointDefRegistry<TChain>[TEntryPointVersion];
export declare function getEntryPoint<TEntryPointVersion extends DefaultEntryPointVersion = DefaultEntryPointVersion, TChain extends Chain = Chain>(chain: TChain, options?: GetEntryPointOptions<TEntryPointVersion>): EntryPointDefRegistry<TChain>[TEntryPointVersion];
export declare function getEntryPoint<TChain extends Chain = Chain>(chain: TChain, options?: GetEntryPointOptions<DefaultEntryPointVersion>): EntryPointDefRegistry<TChain>[DefaultEntryPointVersion];
