import { smartAccountClientMethodKeys } from "./decorators/smartAccountClient.js";
/**
 * Use this method to assert that a client is a BaseSmartAccountClient.
 * Useful for narrowing the type of the client down when used within the
 * smart account client decorators
 *
 * @param {Client<TTransport, TChain, TAccount>} client a viem client
 * @returns {boolean} true if the client is a SmartAccountClient
 */
export function isSmartAccountClient(client) {
    for (const key of smartAccountClientMethodKeys) {
        if (!(key in client)) {
            return false;
        }
    }
    return client && "middleware" in client;
}
/**
 * Use this method to assert that a client is a BaseSmartAccountClient.
 * Useful for narrowing the type of the client down when used within the
 * smart account action decorators
 *
 * @param {Client<TTransport, TChain, TAccount>} client a viem client
 * @returns {boolean} true if the account is a BaseSmartAccountClient
 */
export function isBaseSmartAccountClient(client) {
    return client && "middleware" in client;
}
//# sourceMappingURL=isSmartAccountClient.js.map